% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AssessGenes.R
\name{AssessGenes}
\alias{AssessGenes}
\title{Assess Genes}
\usage{
AssessGenes(
geneLeftPos,
geneRightPos,
geneStrand,
inputMapObj,
geneSource = "",
minCov = 10,
minConCovRatio_Best = 0.99,
limConCovRatio_NotCon = 0.8,
minConCovRatio_Stop = 0.7,
noConStopsGeneFrac = 0.5,
minMissORFLen = 0,
allowNestedORFs = FALSE,
useNTermProt = FALSE,
verbose = TRUE)
}
\arguments{
\item{geneLeftPos}{An integer vector with the left positions of each gene, in terms of the forward strand.}

\item{geneRightPos}{An integer vector with the right positions of each gene, in terms of the forward strand.}

\item{geneStrand}{A character vector consisting of "+" and "-", specifying which strand each gene is on.}

\item{inputMapObj}{EITHER an object of class \code{Assessment} and subclass \code{DataMap} OR a character string
corresponding to the strain identifier for one of such objects from \code{AssessORFData}.}

\item{geneSource}{Optional character string that describes the source of the gene set, i.e. a database or gene prediction program}

\item{minCov}{Minimum number of related genomes required to have synteny to a position in the central genome.}

\item{minConCovRatio_Best}{Minimum value of the start codon conservation to coverage ratio needed to call a start conserved.
Must range from 0 to 1. Lower values allow more conserved starts through. Recommended to use the default value.}

\item{limConCovRatio_NotCon}{Maximum, non-inclusive value of the conservation to coverage ratio needed to call a possible conserved
start not conserved. Used when making a decision on how to categorize the conserved start evidence. Must range from 0 to 1
Recommended to use the default value.}

\item{minConCovRatio_Stop}{Minimum value of the stop codon conservation to coverage ratio needed to say a position in the central
genome corresponds to a conserved stop across the related genomes. Must range from 0 to 1. Lower values allow more conserved stops
through. Recommended to use the default value.}

\item{noConStopsGeneFrac}{Value from 0 to 1 describing the fractional range of positions in a gene, starting from the start of the
gene and moving towards the stop of gene, to use in searching for conserved stops. For example, a value of 0.25 means that the first
quarter of the gene is checked for conserved stops, a value of 0.5 correspond to the first half of the gene, etc. Recommended to use
the default value.}

\item{minMissORFLen}{Minimum ORF length required to include an ORF with protein hits but no gene start in the final results.}

\item{allowNestedORFs}{Logical indicating whether or not to include ORFs with protein hits but no gene starts that are
completely nested within an ORF in another frame in the final results.}

\item{useNTermProt}{Logical indicating whether or not to require the given gene starts to align with (or be one codon off from)
the start of the first proteomics hit in the ORF. The mapping object must be built with N-terminal proteomics data.
Default value is FALSE.}

\item{verbose}{Logical indicating whether or not to display progress and status messages.}
}
\value{
An object of class \code{Assessment} and subclass \code{Results}
}
\description{
Assess and categorize a set of genes for a genome using proteomics hits and evolutionarily conserved starts
as evidence
}
\details{
The vectors \code{geneLeftPos}, \code{geneRightPos}, and \code{geneStrand} must all be of the same length. Using the same
index with each vector must provide information on the same gene (think of the vectors as columns of the same table).

\code{geneLeftPos} and \code{geneRightPos} describe the upstream and downstream positions (respectively) for each gene in
terms of the forward strand. For genes on the forward strand, \code{geneLeftPos} corresponds to the start positions and
\code{geneRightPos} corresponds to stop positions. For genes on the reverse strand, \code{geneLeftPos} corresponds to the
stop positions and \code{geneRightPos} corresponds to the start positions. Gene positions on the reverse strand must be
relative to the 5' to 3' direction of the forward strand (as opposed to being relative to the 5' to 3' direction of the
reverse strand). This means that none of the elements of \code{geneLeftPos} can be greater than (or equal to) the
corresponding element in \code{geneRightPos}.

Please ensure that the same genome that is used in the mapping function is also used to derive the set of genes for this
assessment function. The function will only error if any gene positions are outside the bounds of the genome.

Each of the given genes is assigned a category based on where the conserved starts and proteomics evidence is located in
relation to the start of the gene. Additionaly, open reading frames with proteomics evidence but no gene start are
categorized based on whether or not there is a conserved start upstream of the proteomic evidence. The lengths of these
open reading frames is included in the final object that is returned. Please see \code{\link{Assessment-class}} for a list of
all possible categories and their descriptions.
}
\examples{

## Example showing the minimum number of arguments that need to be specified:

\dontrun{
myResObj <- AssessGenes(geneLeftPos = myGenesLeft,geneRightPos = myGenesRight,
                        geneStrand = myGenesStrand, inputMapObj = myMapObj)
}



## Example from vignette is shown below

currMapObj <- readRDS(system.file("extdata", "MGAS5005_PreSaved_DataMapObj.rds", package = "AssessORF"))

currProdigal <- readLines(system.file("extdata", "MGAS5005_Prodigal.sco", package = "AssessORF"))[-1:-2]

prodigalLeft <- as.numeric(sapply(strsplit(currProdigal, "_", fixed=TRUE), `[`, 2L))
prodigalRight <- as.numeric(sapply(strsplit(currProdigal, "_", fixed=TRUE), `[`, 3L))
prodigalStrand <- sapply(strsplit(currProdigal, "_", fixed=TRUE), `[`, 4L)

currResObj <- AssessGenes(geneLeftPos = prodigalLeft,
geneRightPos = prodigalRight,
geneStrand = prodigalStrand,
inputMapObj = currMapObj,
geneSource = "Prodigal")

}
\seealso{
\code{\link{Assessment-class}}
}
